AWSTemplateFormatVersion: '2010-09-09'
Description: RAG Chatbot EC2 Stack

Parameters:
  KnowledgeBaseId:
    Type: String
    Description: The ID of the Knowledge Base
  InstanceType:
    Type: String
    Description: The type of EC2 instance for chatbot app
    AllowedValues:
      - t2.small
      - t2.medium
      - m5.large
    Default: t2.small

  ChatbotAppInstanceAMI:
    Type: 'AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>'
    Default: '/aws/service/canonical/ubuntu/server/focal/stable/current/amd64/hvm/ebs-gp2/ami-id'

Resources:
  KnowledgeBaseIdParameter:
    Type: AWS::SSM::Parameter
    Properties:
      Name: /RAGChatBot/KNOWLEDGE_BASE_ID6
      Type: String
      Value: !Ref KnowledgeBaseId

  chatbotAppInstanceRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: RAGChatbotInstanceRole
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - ec2.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      ManagedPolicyArns:
        - 'arn:aws:iam::aws:policy/AdministratorAccess'

  IAMInstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Roles:
        - !Ref chatbotAppInstanceRole

  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 172.16.0.0/16
      EnableDnsHostnames: true
      EnableDnsSupport: true
      InstanceTenancy: default

  PublicSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: !Select [ 0, !GetAZs '' ]
      CidrBlock: 172.16.10.0/24
      MapPublicIpOnLaunch: true

  chatbotAppSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow http and ssh traffic
      VpcId: !Ref VPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0

  chatbotAppInstance:
    Type: AWS::EC2::Instance
    Properties:
      ImageId: !Ref ChatbotAppInstanceAMI
      InstanceType: !Ref InstanceType
      IamInstanceProfile: !Ref IAMInstanceProfile
      SecurityGroupIds:
        - !Ref chatbotAppSecurityGroup
      SubnetId: !Ref PublicSubnet
      UserData:
        Fn::Base64:
          !Sub |
            #!/bin/bash

            # Update packages
            sudo apt-get update -y
            sleep 30

            # Install required packages
            sudo apt-get install -y git
            sleep 30
            sudo apt-get install -y ec2-instance-connect
            sleep 20
            sudo apt-get install -y python3-pip
            sleep 30
            sudo apt-get install -y python3.8-venv
            sleep 30

            # Clone repository
            cd /home/ubuntu
            sudo git clone https://github.com/ottlseo/bedrock-rag-chatbot.git
            sleep 15

            # Create virtual environment
            sudo python3 -m venv --copies /home/ubuntu/my_env
            sleep 10
            sudo chown -R ubuntu:ubuntu /home/ubuntu/my_env
            sleep 10
            source /home/ubuntu/my_env/bin/activate
            sleep 20

            cd bedrock-rag-chatbot/application

            # Install dependencies
            pip3 install -r requirements.txt
            sleep 100

            # Create systemd service
            sudo sh -c "cat <<EOF > /etc/systemd/system/streamlit.service
            [Unit]
            Description=Streamlit App
            After=network.target

            [Service]
            User=ubuntu
            Environment='AWS_DEFAULT_REGION=us-west-2'
            WorkingDirectory=/home/ubuntu/bedrock-rag-chatbot/application
            ExecStartPre=/bin/bash -c 'sudo iptables -t nat -A PREROUTING -p tcp --dport 80 -j REDIRECT --to-port 8501'
            ExecStart=/bin/bash -c 'source /home/ubuntu/my_env/bin/activate && streamlit run streamlit.py --server.port 8501'
            Restart=always

            [Install]
            WantedBy=multi-user.target
            EOF"
            sleep 30
            
            # Reload systemd daemon and start the service
            sudo systemctl daemon-reload
            sudo systemctl enable streamlit
            sudo systemctl start streamlit

# Outputs:
#   chatbotAppUrl:
#     Value: !Sub 'http://${chatbotAppInstance.PublicIpAddress}/'
#     Description: '[PLEASE CONNECT IN 5 MINUTES] The URL of chatbot demo generated by AWS RAG-Made-Easy project'
#     Export:
#       Name: chatbotAppUrl